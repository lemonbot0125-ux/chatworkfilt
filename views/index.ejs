<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Supabaseデータ表示</title>
    <style>
        table {
            border-collapse: collapse;
            width: 80%;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        button {
            margin-right: 5px;
        }
    </style>
</head>
<body>

    <h1>データ一覧</h1>

    <table>
        <thead>
            <tr>
                <th>accountId</th>
                <th>名前</th>
                <th>結果</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            <% items.forEach(item => { %>
                <tr>
                    <td><%= item.accountId %></td>
                    <td><%= item.名前 %></td>
                    <td><%= item.結果 %></td>
                    <td>
                        <button onclick="editItem('<%= item.accountId %>')">編集</button>
                        <button onclick="deleteItem('<%= item.accountId %>')">削除</button>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>

    <h2>新規追加</h2>
    <form id="addItemForm">
      <div>
            <label for="Id">accountId:</label>
            <input type="text" id="Id" name="Id" required>
        </div>
        <div>
            <label for="name">名前:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="result">結果:</label>
            <input type="text" id="result" name="result">
        </div>
        <button type="submit">追加</button>
    </form>

    <script>
        async function editItem(id) {
            alert(`編集ID: ${id}`);
        }

        async function deleteItem(id) {
            if (confirm(`${id}を本当に削除しますか？`)) {
                try {
                    const response = await fetch(`/api/items/${id}`, {
                        method: 'DELETE'
                    });
                    if (response.ok) {
                        window.location.reload(); // ページをリロードして最新の状態を表示
                    } else {
                        const error = await response.json();
                        alert(`削除に失敗しました: ${error.message || '不明なエラー'}`);
                    }
                } catch (error) {
                    console.error('削除エラー:', error);
                    alert('削除中にエラーが発生しました');
                }
            }
        }

        document.getElementById('addItemForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/api/items', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                if (response.ok) {
                    window.location.reload(); // ページをリロードして最新の状態を表示
                } else {
                    const error = await response.json();
                    alert(`追加に失敗しました: ${error.message || '不明なエラー'}`);
                }
            } catch (error) {
                console.error('追加エラー:', error);
                alert('追加中にエラーが発生しました');
            }
        });
    </script>

</body>
</html>
