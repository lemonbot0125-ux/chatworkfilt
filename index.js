"use strict";
const express = require("express");
let app = express();
const cluster = require("cluster");
const os = require("os");
const compression = require("compression");
const numClusters = os.cpus().length;
if (cluster.isMaster) {
  for (let i = 0; i < numClusters; i++) {
    cluster.fork();
  }
  cluster.on("exit", (worker, code, signal) => {
    cluster.fork();
  });
} else {
  app.use(compression());
  app.use(express.static(__dirname + "/public"));
  app.set("view engine", "ejs");
  app.listen(3000, () => {
    console.log(`Worker ${process.pid} started`);
  });
}

const axios = require('axios');
const bodyParser = require("body-parser");

const PORT = 3000;

app.use(bodyParser.json());

const CHATWORK_API_TOKEN = process.env.CHATWORK_API_TOKEN;
//„Ç≥„Éû„É≥„Éâ„É™„Çπ„Éà
const commands = {
  "help": wakamehelp,
  "quiz": startQuiz,
  "youtube": getwakametube,
  "bokaro": startbQuiz
};

app.get('/', (req, res) => {
    res.sendStatus(200);
});
//„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
app.post("/webhook", async (req, res) => {
  const fromAccountId = req.body.webhook_event.from_account_id;
  const roomId = req.body.webhook_event.room_id;
  const messageId = req.body.webhook_event.message_id;
  const body = req.body.webhook_event.body;  
  const message = body.replace(/\[To:\d+\]ÂíåÊ≠åbot„Åï„Çì/, "");
  
  const command = getCommand(message);
  if (command && commands[command]) {
    await commands[command](body, message, messageId, roomId, fromAccountId);
  } else if (command) {
    await sendchatwork(
      `[rp aid=${fromAccountId} to=${roomId}-${messageId}]\n‰Ωï„Åù„ÅÆ„Ç≥„Éû„É≥„Éâ„ÄÇ„Éú„ÇØ„ÄÅÁü•„Çâ„Å™„ÅÑ„Çà (ÔΩ°‚àÄ„Çú)\nÊ©üËÉΩË¶ÅÊúõ„Å†„Å£„Åü„Çâ„ÄÅÂÉï„Åò„ÇÉ„Å™„Åè„Å¶„Çè„Åã„ÇÅ„Å´Ë®Ä„Å£„Å¶„Å≠„ÄÇ`,
      roomId
    );
  } else {
    await sendchatwork(`[rp aid=${fromAccountId} to=${roomId}-${messageId}]\n‰Ωï„Åã„ÅîÁî®„Åß„Åó„Çá„ÅÜ„ÅãÔºü‰Ωø„ÅÑÊñπ„ÅåÂàÜ„Åã„Çâ„Å™„ÅÑÂ†¥Âêà[info][code][To:9905801]ÂíåÊ≠åbot„Åï„Çì /help/[/code][/info]„Å®ÂÖ•Âäõ„ÄÅ„ÇÇ„Åó„Åè„ÅØÂÉï„ÅÆ„Éó„É≠„Éï„Ç£„Éº„É´„ÇíË¶ã„Å¶‰∏ã„Åï„ÅÑ„ÄÇ`, roomId);
  }
  
  res.sendStatus(200);
});
//„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°
async function sendchatwork(ms, CHATWORK_ROOM_ID) {
  try {
    await axios.post(
      `https://api.chatwork.com/v2/rooms/${CHATWORK_ROOM_ID}/messages`,
      new URLSearchParams({ body: ms }),
      {
        headers: {
          "X-ChatWorkToken": CHATWORK_API_TOKEN,
          "Content-Type": "application/x-www-form-urlencoded",
        },
      }
    );
    console.log("„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°ÊàêÂäü");
  } catch (error) {
    console.error("Chatwork„Å∏„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°„Ç®„É©„Éº:", error.response?.data || error.message);
  }
}
//„Ç≥„Éû„É≥„Éâ
function getCommand(body) {
  const pattern = /\/(.*?)\//;
  const match = body.match(pattern);
  return match ? match[1] : null;
}

//Help
async function wakamehelp(body, message, messageId, roomId, fromAccountId) {
  await sendchatwork(
    `[rp aid=${fromAccountId} to=${roomId}-${messageId}][info][title]„Éò„É´„Éó[/title]/help/\n„Ç≥„Éû„É≥„Éâ„É™„Çπ„Éà„ÇíË°®Á§∫„Åó„Åæ„Åô„ÄÇ\n/quiz/\nÂíåÊ≠å„Åå„ÇØ„Ç§„Ç∫„ÇíÂá∫È°å„Åó„Å¶„Åè„Çå„Åæ„Åô„ÄÇ\n/youtube/\nYouTube„ÅÆurl„Çí‰∏ÄÁ∑í„Å´ÈÄÅ„Çã„Åì„Å®„Åß„Çπ„Éà„É™„Éº„É†URL„ÇíË°®Á§∫„Åó„Å¶„Åè„Çå„Åæ„Åô„ÄÇ[/info]`,
    roomId
  );
}

//„ÇØ„Ç§„Ç∫
let quizzes = {};

const quizList = [
  { question: "Êó•Êú¨„ÅÆÈ¶ñÈÉΩ„ÅØ„Å©„ÅìÔºü", answer: "Êù±‰∫¨" },
  { question: "Êé®„Åó„ÅÆÂ≠ê‰∏ªÈ°åÊ≠å„Åß„ÅÇ„Çã„Äå„Ç¢„Ç§„Éâ„É´„Äç„ÅÆ„Ç¢„Éº„ÉÜ„Ç£„Çπ„Éà„ÅØË™∞Ôºü", answer: "YOASOBI" },
  { question: "3 + 5 = Ôºü", answer: "8" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "„Éõ„É≠„É©„Ç§„Éñ„ÇíÈÅãÂñ∂„Åó„Å¶„ÅÑ„Çã‰ºöÁ§æ„ÅØ„Å©„ÅìÔºü", answer: ["cover", "COVER", "„Ç´„Éê„Éº"] },
  { question: "Êó•Êú¨„ÅÆÂÖÉÂè∑„Åß„ÄÅÂπ≥Êàê„ÅÆÂâç„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êò≠Âíå" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
  { question: "Â§™ÈôΩÁ≥ª„Åß‰∏ÄÁï™Â§ß„Åç„Å™ÊÉëÊòü„ÅØ‰Ωï„Åß„Åô„ÅãÔºü", answer: "Êú®Êòü" },
];

async function startQuiz(body, message, messageId, roomId, fromAccountId) {
  if (quizzes[roomId]) {
    await sendchatwork(`ÁèæÂú®„ÇØ„Ç§„Ç∫„ÅåÈñãÂÇ¨‰∏≠„Åß„ÅôÔºÅÁµÇ‰∫ÜÂæå„Å´Êñ∞„Åó„ÅÑ„ÇØ„Ç§„Ç∫„ÇíÈñãÂßã„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`, roomId);
    return;
  }

  const quiz = quizList[Math.floor(Math.random() * quizList.length)];
  quizzes[roomId] = { question: quiz.question, answer: quiz.answer };
  await sendchatwork(`„ÇØ„Ç§„Ç∫„ÇíÈñãÂßã„Åó„Åæ„ÅôÔºÅ(5ÁßíÂæå„Å´„ÇØ„Ç§„Ç∫„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô)`, roomId);
  await new Promise(resolve => setTimeout(resolve, 5000));
  await sendchatwork(`ÂïèÈ°å: [info]${quiz.question}[/info]`, roomId);
}

app.post("/quiz", async (req, res) => {
  const message = req.body.webhook_event.body; 
  const messageId = req.body.webhook_event.message_id;
  const roomId = req.body.webhook_event.room_id;
  const AccountId = req.body.webhook_event.account_id;

  if (!quizzes[roomId]) {
    return res.sendStatus(200);
  }

  const currentQuiz = quizzes[roomId];
  const answer = message.trim();

  if (Array.isArray(currentQuiz.answer)) {
    if (currentQuiz.answer.some(ans => ans.toLowerCase() === answer.toLowerCase())) {
      await sendchatwork(`[rp aid=${AccountId} to=${roomId}-${messageId}]\n„Åä„Åø„Åî„Å®ÔºÅÊ≠£Ëß£„Åß„ÅôÔºÅüéâ`, roomId);
      delete quizzes[roomId];
    }
  } else {
    if (answer.toLowerCase() === currentQuiz.answer.toLowerCase()) {
      await sendchatwork(`[rp aid=${AccountId} to=${roomId}-${messageId}]\n„Åä„Åø„Åî„Å®ÔºÅÊ≠£Ëß£„Åß„ÅôÔºÅüéâ`, roomId);
      delete quizzes[roomId];
    }
  }
  res.sendStatus(200);
});


//„Éú„Ç´„É≠
const bquizList = [
  { question: "„Åì„Åì„Å´Â±Ö„ÇãÁêÜÁî±„ÅåÊ¨≤„Åó„Åã„Å£„Åü„Å†„Åë", answer: "„Åè„ÅÜ„Å´„Å™„Çã" },
  { question: "È£ü„Åπ„Å¶„Åô„ÅêÂØù„ÇãÂâç„Å´È£≤„ÇÄ\nËµ∑„Åç„Å¶„Åæ„ÅüÂØù„ÇãÂâç„Å´È£≤„ÇÄ", answer: "ÂèØ‰∏ç„Çß„Ç§„É≥" },
  { question: "Á∏ÅÂèñ„Å£„ÅüÊÄíÂºµ„Å´ÁóÖ„Çì„Åß„ÅÑ„Çã\nÈü≥„ÅßË≠ò„Å£„Å¶Èõ®„Åø„Åü„ÅÑÁÜ±„Å´", answer: "„É¨„É™„ÇÆ„Ç™„Çπ" },
  { question: "Ê≠ª„Å¨„Åæ„Åß„Éî„É•„Ç¢„Éî„É•„Ç¢„ÇÑ„Å£„Å¶„Çì„ÅÆ„ÇìÔºü", answer: "„É©„Éì„ÉÉ„Éà„Éõ„Éº„É´" },
  { question: "Ë¶ã„Å™„ÅÑ„ÅßÁêÜËß£Âá∫Êù•„Å™„ÅÑ„Åß„Åó„Çá„ÅÜÔºü", answer: "Âåñ„Åë„ÅÆËä±" },
  { question: "Áü•„Å£„Å°„ÇÉ„Å£„ÅüÂ§ßÂ´å„ÅÑ„ÇíË£èËøî„Åó„Åü„Å®„Å¶\n„Åù„Åì„Å´Â§ßÂ•Ω„Åç„ÅØÈö†„Çå„Å¶„Å™„ÅÑ„Å®", answer: "Â¶ÑÊÉ≥Âπ≤Ê∏â‰ª£ÂÑüÈÄ£Áõü" },
  { question: "3„Å§1„Å§„Å´ÁΩ™„ÅØ„Å™„ÅÑ\nÊç®„Å¶„Åü„ÇÇ„ÅÆ„Åò„ÇÉ„Å™„ÅÑ\n„Å†„Å£„Å¶„Åù„ÅÜ„Åò„ÇÉ„Å™„ÅÑÔºü", answer: "QUEEN" },
  { question: "„É¨„Éº„É´„ÅÆË¶Å„Çâ„Å™„ÅÑÂÉï„Çâ„ÅØ\nÊúõ„ÅøÂ•Ω„Çì„ÅßÂ§ú„ÇíËøΩ„ÅÜ„Çì„Å†„Å™", answer: "„Éâ„Éº„Éä„ÉÑ„Éõ„Éº„É´" },
  { question: "Ë™∞„ÅãË™∞„ÅãÂÉï„ÇíË¶ã„Å§„Åë„Å¶\n„Å£„Å¶Âè´„Åπ„Åü„ÇâÊ•Ω„Å´„Å™„Çå„Çã„ÅÆ„Åã„Å™", answer: "„Éè„Éä„Çø„Éê" },
  { question: "Rainy,rainy Ê±Ç„ÇÅ„Çã„ÇÇ„ÅÆ„Å†„Åë„ÇíÊèè„ÅÑ„Åü", answer: "Èôê„Çä„Å™„ÅèÁÅ∞Ëâ≤„Å∏" },
  { question: "Ê≠£Ë´ñ„ÇÇÂ∏∏Ë≠ò„ÇÇ„ÄÄÊÑèÂë≥„ÇíÊåÅ„Åü„Å™„ÅÑ„Å®„ÅãÈÉΩ‰ºö„Å´„Çµ„É®„Ç¶„Éä„É©ÔºÅ", answer: "„Ç∞„ÉÉ„Éê„Ç§ÂÆ£Ë®Ä" },
  { question: "„Å™„Çì„Åß„Å™„Çì„Åß„Å™„Çì„Åß„Å™„Çì„Åß„Å™„Çì„Åß „Å™„Çì„Åß„Å™„ÅÆ „Å©„ÅÜ„ÅÑ„ÅÜ„Å§„ÇÇ„Çä", answer: "„ÉâÂ±ë" },
  { question: "„ÅäÂë™„ÅÑ„ÅåËß£„Åë„Å°„ÇÉ„Å£„Åü\nÂú∞ÁçÑ„Å´Â†ï„Å°„Å¶ Âú∞ÁçÑ„Å´Â†ï„Å°„Å¶\nÂú∞ÁçÑ„Å´„ÄÅÂ†ï„Å°„Çç„ÄÇ", answer: "„ÅäÂë™„ÅÑ" },
  { question: "„Åï„ÅÇ„Åï„ÅÇÂº±Èü≥„ÅØ„Éü„É•„Éº„Éà„Åó„Å¶ „Åè„Å†„Çâ„Å™„ÅÑ„Åì„Å®„ÅßË∫äË∫á„Åó„Å¶", answer: "„Éí„Éê„Éä" },
  { question: "ÊñØ„ÅèÊøÅ„Å£„ÅüÊ≠£Áæ©„Å∏Âïè„ÅÜ\n„ÅÇ„Å™„Åü„ÅÆË©±„ÅØ„Å§„Åæ„Çì„Å™„ÅÑ„Çà", answer: "snooze" },
  { question: "Êï¢„Åà„Å¶Á¥†Áü•„Çâ„Å¨È°î„Åß\nË∫´„Çí‰ªª„Åõ„Çã„ÅÆ„ÅåÊúÄÈÅ©Ëß£Ôºü", answer: "„É°„Ç∫„Éû„É©„Ç§„Ç∂„Éº" },
  { question: "„Å™„Å´„ÇÇ„Å™„ÅÑ„ÄÄ„Å™„Å´„ÇÇ„Å™„ÅÑ„ÄÄÁßÅ„Å™„Å´„ÇÇ„Å™„ÅÑ", answer: "„ÉÄ„Éº„É™„É≥„ÉÄ„É≥„Çπ" },
];

async function startbQuiz(body, message, messageId, roomId, fromAccountId) {
  if (quizzes[roomId]) {
    await sendchatwork(`ÁèæÂú®„ÇØ„Ç§„Ç∫„ÅåÈñãÂÇ¨‰∏≠„Åß„ÅôÔºÅÁµÇ‰∫ÜÂæå„Å´Êñ∞„Åó„ÅÑ„ÇØ„Ç§„Ç∫„ÇíÈñãÂßã„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`, roomId);
    return;
  }

  const quiz = quizList[Math.floor(Math.random() * bquizList.length)];
  quizzes[roomId] = { question: quiz.question, answer: quiz.answer };
  await sendchatwork(`„Éú„Ç´„É≠„ÇØ„Ç§„Ç∫„ÇíÈñãÂßã„Åó„Åæ„ÅôÔºÅÊ≠åË©û„ÅÆ‰∏ÄÈÉ®„ÅåË°®Á§∫„Åï„Çå„Çã„ÅÆ„Åß„ÄÅÊõ≤„ÅÆ„Çø„Ç§„Éà„É´„ÇíÊ≠£„Åó„ÅèÂÖ•Âäõ„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ(5ÁßíÂæå„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô)`, roomId);
  await new Promise(resolve => setTimeout(resolve, 5000));
  await sendchatwork(`ÂïèÈ°å: [info]${quiz.question}[/info]`, roomId);
}


//youtube
const YOUTUBE_URL = /(?:https?:\/\/)?(?:www\.)?youtu(?:\.be\/|be\.com\/(?:watch\?v=|embed\/|v\/|shorts\/))([\w\-]+)/;

async function getwakametube(body, message, messageId, roomId, fromAccountId) {
  const ms = message.replace(/\s+/g, "");
  const match = ms.match(YOUTUBE_URL);

  if (match) {
    const videoId = match[1];

    try {
      const response = await axios.get(`https://wataamee.glitch.me/api/${videoId}?token=wakameoishi`);
      const videoData = response.data;
      const streamurl = videoData.stream_url;
      await sendchatwork(`[rp aid=${fromAccountId} to=${roomId}-${messageId}]\n${streamurl}`, roomId);
      
    } catch (error) {
      console.error("API„É™„ÇØ„Ç®„Çπ„Éà„Ç®„É©„Éº:", error);
      await sendchatwork(`[rp aid=${fromAccountId} to=${roomId}-${messageId}]\n„Åà„Çâ„Éº„ÄÇ„ÅÇ„Çâ„Çâ„ÄÇÊôÇÈñì„Çí„Åä„ÅÑ„Å¶„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó‰∏ã„Åï„ÅÑ„ÄÇ„Éº`, roomId);
    }
  } else {
    await sendchatwork(`[rp aid=${fromAccountId} to=${roomId}-${messageId}]\nURL„ÅåÁÑ°Âäπ„Åß„Åô„ÄÇÊ≠£„Åó„ÅÑYouTube„ÅÆURL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`, roomId);
  }
}
